<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.utunan.mapper.community.QuizMapper">
    <resultMap id="quizResultMap" type="com.utunan.pojo.base.community.Quiz">
        <id property="quizId" column="quizId"/>
        <result property="userId" column="userId"/>
        <result property="quizTitle" column="quizTitle"/>
        <result property="quizContent" column="quizContent"/>
        <result property="releaseTime" column="releaseTime"/>
        <result property="praiseCount" column="praiseCount"/>
        <association property="user" javaType="com.utunan.pojo.base.user.User">
            <result property="userEmail" column="userEmail"/>
            <result property="userTelephone" column="userTelephone"/>
            <result property="userPassword" column="userPassword"/>
            <result property="userIdentity" column="userIdentity"/>
            <result property="examTime" column="examTime"/>
            <result property="registerTime" column="registerTime"/>
            <result property="userHeadImg" column="userHeadImg"/>
            <result property="userNickName" column="userNickName"/>
            <result property="userSchool" column="userSchool"/>
            <result property="dreamSchool" column="dreamSchool"/>
            <result property="userIntegral" column="userIntegral"/>
        </association>

        <collection property="answer" javaType="java.util.List" ofType="com.utunan.pojo.base.community.Answer">
             <id property="answerId" column="answerId"/>

            <result property="quizId" column="quizId"/>
            <result property="answerContent" column="answerContent"/>
            <result property="answerTime" column="answerTime"/>
            <result property="answerPraiseCount" column="praiseCount"/>
            <result property="replyCommentId" column="replyCommentId"/>
        </collection>
    </resultMap>

    <!--根据发表时间分页查询-->
    <select id="listQuizByTime" resultMap="quizResultMap">
        SELECT *
        from quiz q
                 join user u on q.userId = u.userId
        order by q.releaseTime desc
    </select>
    <!--根据点赞数量分页查询-->
    <select id="listQuizByPraise" resultMap="quizResultMap">
        select *
        from quiz q
                 join user u on q.userId = u.userId
        order by q.praiseCount desc
    </select>
    <!--统计所有quiz个数-->
    <select id="countAllQuiz" resultType="java.lang.Long">
        select count(*)
        from quiz
    </select>
    <!--根据quizId查用户-->
    <select id="findUserByQuizId" resultType="com.utunan.pojo.base.user.User">
        select u.*
        from user u
                 join quiz q on q.userId = u.userId
        where quizId = #{quizId}
    </select>
    
    <!--根据quizId查评论数量-->
    <select id="countCommentByQuizId" resultType="java.lang.Long">
        select count(answerId)
        from answer
        where quizId=#{quizId}
    </select>
    <!--根据quizId查标签列表-->
    <select id="selectTagByQuizId" resultType="com.utunan.pojo.base.community.Tag">
        select t.tagName
        from tag t
                 join quiz_tag qt on t.tagId = qt.tagId
        where qt.quizId = #{quizId}
    </select>

    <!-- 插入数据，这里quizId是自动递增的，所以不需要插入 -->
    <insert id="toInsert" parameterType="com.utunan.pojo.base.community.Quiz" useGeneratedKeys="true"
            keyProperty="quizId">
        insert into quiz(quizId, userId, quizTitle, quizContent, releaseTime, praiseCount, commentCount)
        values (#{quizId}, #{userId}, #{quizTitle}, #{quizContent}, #{releaseTime}, #{praiseCount}, #{commentCount})
    </insert>
    
    <!--根据回答quizId最大查询，每次只查一条-->
    <select id="getQuiz1" resultType="com.utunan.pojo.base.community.Quiz">
        select *
        from quiz
        where quizId = (select max(quizId) from quiz)
    </select>
    
    <!--更新quiz表点赞数-->
    <update id="updatePraiseCount" parameterType="java.lang.Long">
        update quiz
        set praiseCount=praiseCount + 1
        where quizId = #{quizId}
    </update>
    
    <!--@author 王碧云 根据QuizId查找Quiz-->
    <select id="findQuizById" resultMap="quizResultMap">
        select *
        from quiz
                 join user on quiz.userId = user.userId
        where
            quizId = #{quizId}
    </select>
    
    <!--在某标签下根据发表时间分页查询-->
    <select id="listQuizByTimeWithTagName" resultType="com.utunan.pojo.base.community.Quiz">
        select *
        from quiz
        where quizId in
        <foreach collection="quizId" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
        order by releaseTime desc
    </select>
    <!--在某标签下根据点赞数量分页查询-->
    <select id="listQuizByPraiseWithTagName" resultType="com.utunan.pojo.base.community.Quiz">
        select *
        from quiz
        where quizId in
        <foreach collection="quizId" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
        order by praiseCount desc
    </select>
    <!--统计某标签下的所有quiz个数-->
    <select id="countQuizWithTagName" resultType="java.lang.Long">
        select count(qt.quizId)
        from quiz_tag qt
                 join tag t on qt.tagId = t.tagId
        where t.tagName = #{tagName}
    </select>
    
    <!--根据tagName查quizId-->
    <select id="selectQuizIdByTagName" resultType="java.lang.Long">
        select qt.quizId
        from quiz_tag qt
                 join tag t on qt.tagId = t.tagId
        where t.tagName = #{tagName}
        group by qt.quizId
    </select>
    
    <!--根据搜索条件查询提问-->
    <select id="findQuizBySearch" resultMap="quizResultMap">
        select *
        from quiz q
                 join user u on q.userId = u.userId
        where q.quizTitle like #{searchValue}
           or q.quizContent like #{searchValue}
    </select>
    <!--根据搜索条件统计提问数量-->
    <select id="countQuizBySearch" resultType="java.lang.Long">
        select count(*)
        from quiz
        where quizTitle like #{searchValue}
           or quizContent like #{searchValue}
    </select>
    
    <!--根据UserId 查询 Quiz-->
    <select id="selectQuizByUserId" resultMap="quizResultMap">
        select *
        from quiz
        where userId = #{userId}
    
    </select>
    
    <!--张正扬，查询最大quizId-->
    <select id="getMax" resultType="java.lang.Long">
        select max(quizId)
        from quiz
    
    </select>
    
    <!--张正扬， 增加问题回答数-->
    <update id="addcommentcount" parameterType="java.lang.Long">
        update quiz
        set commentCount=commentCount+1
        where quizId=#{quizId}
    </update>
</mapper>